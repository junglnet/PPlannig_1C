// Формирование таблицы
&НаСервере
Процедура СформироватьНаСервере()
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ББ_ПланыПроизводства.Ссылка КАК ДокументПланирования,
	|	ББ_ПланыПроизводства.Заказ КАК Заказ,
	|	ББ_ПланыПроизводства.УчастокПроизводства КАК Участок,
	|	ББ_ПланыПроизводства.ДатаСтарта КАК ДатаСтарта,
	|	ББ_ПланыПроизводства.ДатаЗавершения КАК ДатаЗавершения,
	|	ББ_ПланыПроизводства.Комментарий КАК Комментарий,
	|	ББ_ПланыПроизводства.Завершен КАК Завершен,
	|	ЗаказПокупателяЗапасы.Номенклатура.ББ_Модель КАК Модель,
	|	ЗаказПокупателяЗапасы.Ссылка.ББ_НестандартныйЗаказ КАК НЗ,
	|	ЗаказПокупателяЗапасы.Ссылка.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ЗаказПокупателяЗапасы.Ссылка.ББ_комплект КАК Комплектация,
	|	ЗаказПокупателяЗапасы.Ссылка.ББ_Материал КАК Материал,
	|	0 КАК Изм
	|ИЗ
	|	Документ.ББ_ПланыПроизводства КАК ББ_ПланыПроизводства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	|		ПО ББ_ПланыПроизводства.Заказ = ЗаказПокупателяЗапасы.Ссылка
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Номенклатура В ИЕРАРХИИ (&НоменклатурнаяГруппа)
	|	И (&УчастокПроизводства = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	ИЛИ ББ_ПланыПроизводства.УчастокПроизводства = &УчастокПроизводства)
	|ИТОГИ
	|	МИНИМУМ(ДатаСтарта),
	|	МИНИМУМ(Завершен),
	|	МАКСИМУМ(Модель),
	|	МАКСИМУМ(НЗ) КАК НЗ
	|ПО
	|	Заказ";
	
	Запрос.УстановитьПараметр("УчастокПроизводства", УчастокПроизводства);	
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	 
	//Таблица = Запрос.Выполнить().Выгрузить();
	
	Таблица = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ЗначениеВРеквизитФормы(Таблица, "ПланированиеТаблица");

КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере()
		
	// Сохранение для заказов
	Для Каждого СтрокаТабЧасти Из ЭтотОбъект.ПланированиеТаблица.ПолучитьЭлементы() Цикл				
			
			Если СтрокаТабЧасти.Завершен тогда
				
				// Добавить логику сохранения, если установлен флаг завершения для заказа
				
			Иначе
				Для Каждого Элемент Из СтрокаТабЧасти.ПолучитьЭлементы() Цикл
					
					// Добавить логику сохранения, если установлен флаг для каждого участка
					
				КонецЦикла	
				
			КонецЕсли
			
	КонецЦикла
	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПланированиеТаблицаПриИзменении(Элемент)
	
	Элемент.ТекущиеДанные.Изм = Истина;
	
	
	
	
	Если Элемент.ТекущиеДанные.Завершен Тогда 
		
		Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.ДатаЗавершения) Тогда
			
			Элемент.ТекущиеДанные.ДатаЗавершения = Элемент.ТекущиеДанные.ДатаСтарта;
			
		КонецЕсли; 
				
		Для Каждого ЭлементЗаказ Из Элемент.ТекущиеДанные.ПолучитьЭлементы()  Цикл
					
			ЭлементЗаказ.Завершен = Истина;
			
			Если НЕ ЗначениеЗаполнено(ЭлементЗаказ.ДатаЗавершения) Тогда
				
				ЭлементЗаказ.ДатаЗавершения = Элемент.ТекущиеДанные.ДатаСтарта;
				
			КонецЕсли;	
					
		КонецЦикла;	
		
		Род = Элемент.ТекущиеДанные.ПолучитьРодителя();
		
		Если НЕ Род = Неопределено Тогда
			
			ОтказРод = 0;
			
			Для Каждого РодЭлемент Из Род.ПолучитьЭлементы()  Цикл
				
				Если НЕ РодЭлемент.Завершен Тогда 
				
					ОтказРод = ОтказРод +1;
				
				КонецЕсли;
				
			КонецЦикла;
			
			// TODO: Добавить поиск максимальной даты и проставка ее для заказа.
			
			Если ОтказРод = 0 Тогда Род.Завершен = Истина КонецЕсли;
			
		КонецЕсли;	
		
			
		
	КонецЕсли;
	
	
	
	Если Не Элемент.ТекущиеДанные.Завершен Тогда	
			
			Элемент.ТекущиеДанные.ДатаЗавершения = "";	
			
			Род = Элемент.ТекущиеДанные.ПолучитьРодителя();
			
			Род.Завершен = Ложь;
			Род.ДатаЗавершения = "";			
		
		
	КонецЕсли;
	
//	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ДатаЗавершения) Тогда 
//		
//		Элемент.ТекущиеДанные.Завершен = Истина;
//				
//		Для Каждого ЭлементЗаказ Из Элемент.ТекущиеДанные.ПолучитьЭлементы()  Цикл
//					
//			ЭлементЗаказ.Завершен = Истина;
//			
//			ЭлементЗаказ.ДатаЗавершения = Элемент.ТекущиеДанные.ДатаЗавершения;
//					
//		КонецЦикла	
//		
//	КонецЕсли;
//	
//	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Комментарий) Тогда
//				
//		Для Каждого ЭлементЗаказ Из Элемент.ТекущиеДанные.ПолучитьЭлементы()  Цикл					
//			
//			
//			ЭлементЗаказ.Комментарий = Элемент.ТекущиеДанные.Комментарий;
//					
//		КонецЦикла	
//		
//	КонецЕсли;
		
//	
//	Для Каждого СтрокаТабЧасти Из ЭтотОбъект.ПланированиеТаблица.ПолучитьЭлементы() Цикл				
//			
//			Если СтрокаТабЧасти.Завершен тогда
//				
//				СтрокаТабЧасти.ДатаЗавершения = ТекущаяДата();							
//			
//				Для Каждого Элемент Из СтрокаТабЧасти.ПолучитьЭлементы() Цикл
//					
//					Элемент.Завершен = Истина;
//					Элемент.ДатаЗавершения = ТекущаяДата();
//					
//				КонецЦикла	
//				
//			КонецЕсли;
//			
//	КонецЦикла;
	
	
	//Элемент.ТекущиеДанные.ДатаЗавершения = ТекущаяДата(); 
	
	
	ПланированиеТаблицаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПланированиеТаблицаПриИзмененииНаСервере()
	//TODO: Вставить содержимое обработчика
КонецПроцедуры


&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры
